'''
Задание 1.
Выяснить тип результата выражений:
15 * 3
15 / 3
15 // 2
15 ** 2
'''

print("type of (15 * 3) is {}\ntype of (15 / 3) is {}\n\
type of (15 // 2) is {}\ntype of (15 ** 2) is {}".\
        format(type(15 * 3), type(15 / 3), type(15 // 2), type(15 ** 2)))

        

'''
Задание 2,3.
Дан список:
['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
(добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
'''


my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

for _ in range(len(my_list)):

    element = my_list.pop(0)

    if element.isdigit():
        my_list.extend(['"', '{:02}'.format(int(element)), '"'])

    elif element[0] == '+' and element[1].isdigit():
        my_list.extend(['"', '{:02}'.format(int(element)), '"'])
    
    else:
        my_list.append(element)

print(' '.join(my_list))
print(my_list)






'''Второй способ'''


def get_sign(x):
    if x[0] in '+-':
        return x[0]

arr = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

i = 0
while i < len(arr):
    sign = get_sign(arr[i])
    if arr[i].isdigit() or (sign and arr[i][1:].isdigit()):
        if sign:
            arr[i] = sign + arr[i][1:].zfill(2)
        else:
            arr[i] = arr[i].zfill(2)

        arr.insert(i, '"')
        arr.insert(i + 2, '"')
        i += 2

    i += 1

print(arr)







'''
Задание 4.
Дан список, содержащий искажённые данные с должностями и именами сотрудников:
['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']

Известно, что имя сотрудника всегда в конце строки.
Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
Подумать, как получить имена сотрудников из элементов списка,
как привести их к корректному виду. Можно ли при этом не создавать новый список?
'''

list_words = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']

for word in list_words:
    
    word = word.split(' ')[-1]
    print('Привет, {}!'.format(word.title()))











def get_sign(x):
    if x[0] in '+-':
        return x[0]

arr = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

i = 0
while i < len(arr):
    sign = get_sign(arr[i])
    if arr[i].isdigit() or (sign and arr[i][1:].isdigit()):
        if sign:
            arr[i] = sign + arr[i][1:].zfill(2)
        else:
            arr[i] = arr[i].zfill(2)

        arr.insert(i, '"')
        arr.insert(i + 2, '"')
        i += 2

    i += 1

print(arr)




'''
Задание 5.
Создать список, содержащий цены на товары (10–20 товаров), например:
[57.8, 46.51, 97, ...]

Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек 
(должно быть 07 коп или 00 коп).
Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
Создать новый список, содержащий те же цены, но отсортированные по убыванию.
Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
'''






price_list = [12.36, 55.03, 45.02, 53.2, 33.34, 22.14,
    12.31, 4.32, 45.3, 71.2, 4.54, 2.07, 13.21, 568.7]

check_id = id(price_list)

copy_price_list = price_list.copy() # create a list copy

for i in range(len(copy_price_list)):
    
    cost = copy_price_list.pop(0)  # delete and return the 1st element of list
    kk = cost % 1  # копейки
    r = cost - kk  # рубли
    copy_price_list.append('{:.0f} руб {:02.0f} коп'.format(r, kk*100))
print(', '.join(copy_price_list))


#Вывести цены, отсортированные по возрастанию, новый список не создавать 
#(доказать, что объект списка после сортировки остался тот же).

'''чтобы не менять объекты списка можно применить
не метод sort(), а функция sorted()'''

print('\n',sorted(price_list))  # цены, отсортированные по возрастанию


if check_id == id(price_list):
    print('equal objects')
else:
    print('different objects')

print('\nid of origin list is {}\n\n\
id of sorted list is {}'.format(check_id, id(price_list)))



# Создать новый список, содержащий те же цены, но отсортированные по убыванию.

copy_2_price_list = price_list.copy() # create a 2nd list copy

copy_2_price_list.sort(reverse = 1) 

print('\n', copy_2_price_list)


# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

print('\nцены пяти самых дорогих товаров по возрастанию {}'\
    .format(sorted(copy_2_price_list)[-5:]))




